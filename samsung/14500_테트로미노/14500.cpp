#include <fstream>
#include <iostream>
#include <vector>

using namespace std;

int map[500][500] = {0, };

int shape[][4][4] = {
    {{1, 1, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}}, 
    {{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 0, 0, 0}, {1, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 1, 1, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 1, 0, 0}, {0, 1, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}}, 
    {{0, 0, 1, 0}, {1, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{0, 1, 0, 0}, {0, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 0, 0, 0}, {1, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 1, 0, 0}, {1, 0, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 1, 1, 0}, {0, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 0, 0, 0}, {1, 1, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}}, 
    {{0, 1, 1, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{0, 1, 0, 0}, {1, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 1, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 1, 1, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{0, 1, 0, 0}, {1, 1, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 0}}, 
    {{0, 1, 0, 0}, {1, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
    {{1, 0, 0, 0}, {1, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 0}}, 
};

int main() {
    ifstream cin("input.txt");
    if (cin.fail()) return -1;

    int N, M; // 세로, 가로 크기 (4 <= N, M <= 500)
    cin >> N >> M;
    for (int y = 0; y < N; y++) { 
        for (int x = 0; x < M; x++) {
            cin >> map[y][x];
        }
    }

    int max = 0;
    for (int y = 0; y < N; y++) { 
        for (int x = 0; x < M; x++) {
            for (int i = 0; i < 19; i++) {
                int localMax = 0;
                bool flag = false;
                for (int yy = 0; yy < 4; yy++) { 
                    for (int xx = 0; xx < 4; xx++) {
                        if (shape[i][yy][xx] == 1) {
                            if (y + yy >= N || x + xx >= M) {
                                flag = true;
                                break;
                            }

                            localMax += map[y + yy][x + xx];
                        }
                    }
                    if (flag) break;
                }
                if (!flag && localMax > max) {
                    max = localMax;
                }
            }
        }
    }

    cout << max <<endl;

    return 0;
}